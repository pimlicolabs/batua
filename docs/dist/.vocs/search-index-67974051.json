{"documentCount":65,"nextId":65,"documentIds":{"0":"docs/pages/batch-transactions.mdx#batch-transactions","1":"docs/pages/batch-transactions.mdx#using-usesendcalls","2":"docs/pages/batch-transactions.mdx#example-batch-erc-20-operations","3":"docs/pages/batch-transactions.mdx#monitoring-batch-status","4":"docs/pages/batch-transactions.mdx#benefits-of-batch-transactions","5":"docs/pages/batch-transactions.mdx#gas-efficiency","6":"docs/pages/batch-transactions.mdx#better-ux","7":"docs/pages/batch-transactions.mdx#use-cases","8":"docs/pages/batch-transactions.mdx#error-handling","9":"docs/pages/batch-transactions.mdx#next-steps","10":"docs/pages/customization.mdx#customization","11":"docs/pages/customization.mdx#theme-integration","12":"docs/pages/customization.mdx#visual-customizer","13":"docs/pages/customization.mdx#manual-customization","14":"docs/pages/customization.mdx#styling-components","15":"docs/pages/customization.mdx#css-custom-properties","16":"docs/pages/customization.mdx#component-customization","17":"docs/pages/customization.mdx#custom-connect-button","18":"docs/pages/customization.mdx#custom-modal-content","19":"docs/pages/customization.mdx#branding-options","20":"docs/pages/customization.mdx#logo-integration","21":"docs/pages/customization.mdx#custom-messages","22":"docs/pages/customization.mdx#advanced-customization","23":"docs/pages/customization.mdx#custom-hooks","24":"docs/pages/customization.mdx#custom-error-handling","25":"docs/pages/customization.mdx#best-practices","26":"docs/pages/customization.mdx#accessibility","27":"docs/pages/customization.mdx#responsive-design","28":"docs/pages/customization.mdx#next-steps","29":"docs/pages/getting-started.mdx#getting-started","30":"docs/pages/getting-started.mdx#what-is-batua","31":"docs/pages/getting-started.mdx#how-it-works","32":"docs/pages/getting-started.mdx#why-choose-batua","33":"docs/pages/getting-started.mdx#for-users","34":"docs/pages/getting-started.mdx#for-developers","35":"docs/pages/getting-started.mdx#next-steps","36":"docs/pages/installation.mdx#installation","37":"docs/pages/installation.mdx#install-using-the-cli","38":"docs/pages/installation.mdx#what-gets-installed","39":"docs/pages/installation.mdx#prerequisites","40":"docs/pages/installation.mdx#next-steps","41":"docs/pages/try-batua.mdx#try-batua","42":"docs/pages/try-batua.mdx#interactive-demo","43":"docs/pages/try-batua.mdx#what-you-can-test","44":"docs/pages/try-batua.mdx#1-wallet-connection","45":"docs/pages/try-batua.mdx#2-single-transactions","46":"docs/pages/try-batua.mdx#3-batch-transactions","47":"docs/pages/try-batua.mdx#4-real-time-updates","48":"docs/pages/try-batua.mdx#demo-environment","49":"docs/pages/try-batua.mdx#getting-test-tokens","50":"docs/pages/try-batua.mdx#understanding-the-code","51":"docs/pages/try-batua.mdx#troubleshooting","52":"docs/pages/try-batua.mdx#passkey-issues","53":"docs/pages/try-batua.mdx#transaction-issues","54":"docs/pages/try-batua.mdx#next-steps","55":"docs/pages/try-batua.mdx#feedback","56":"docs/pages/usage.mdx#usage","57":"docs/pages/usage.mdx#step-1-set-up-passkey-server","58":"docs/pages/usage.mdx#step-2-implement-batua","59":"docs/pages/usage.mdx#configuration-options","60":"docs/pages/usage.mdx#required-configuration","61":"docs/pages/usage.mdx#optional-configuration","62":"docs/pages/usage.mdx#integration-with-wagmi","63":"docs/pages/usage.mdx#environment-variables","64":"docs/pages/usage.mdx#next-steps"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,34],"1":[2,2,38],"2":[5,2,55],"3":[3,2,39],"4":[4,2,1],"5":[2,4,27],"6":[2,4,22],"7":[2,4,34],"8":[2,2,40],"9":[2,2,16],"10":[1,1,26],"11":[2,1,35],"12":[2,1,32],"13":[2,1,1],"14":[2,2,42],"15":[3,2,24],"16":[2,1,1],"17":[3,2,43],"18":[3,2,36],"19":[2,1,1],"20":[2,3,22],"21":[2,3,22],"22":[2,1,1],"23":[2,2,37],"24":[3,2,32],"25":[2,1,1],"26":[1,3,27],"27":[2,3,22],"28":[2,1,17],"29":[2,1,35],"30":[4,2,55],"31":[3,2,69],"32":[4,2,1],"33":[2,6,29],"34":[2,6,27],"35":[2,2,11],"36":[1,1,1],"37":[4,1,27],"38":[4,1,37],"39":[1,1,32],"40":[2,1,27],"41":[2,1,21],"42":[2,2,51],"43":[4,2,1],"44":[3,6,26],"45":[3,6,17],"46":[3,6,19],"47":[4,6,14],"48":[2,2,34],"49":[3,2,28],"50":[3,2,40],"51":[1,2,1],"52":[2,3,22],"53":[2,3,26],"54":[2,2,28],"55":[1,2,30],"56":[1,1,1],"57":[6,1,31],"58":[4,1,53],"59":[2,1,1],"60":[2,3,16],"61":[2,3,14],"62":[3,1,50],"63":[2,1,26],"64":[2,1,16]},"averageFieldLength":[2.4307692307692306,2.2153846153846164,25.307692307692307],"storedFields":{"0":{"href":"/batch-transactions#batch-transactions","html":"</header>\n<p>One of the key benefits of using smart accounts is the ability to batch multiple transactions into a single operation. This reduces gas costs and improves user experience by requiring only one signature for multiple actions.</p>\n","isPage":true,"text":"\nOne of the key benefits of using smart accounts is the ability to batch multiple transactions into a single operation. This reduces gas costs and improves user experience by requiring only one signature for multiple actions.\n","title":"Batch Transactions","titles":[]},"1":{"href":"/batch-transactions#using-usesendcalls","html":"\n<p>Batua supports the experimental <code>useSendCalls</code> hook from wagmi for batch transactions:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useSendCalls, useWaitForCallsStatus } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;wagmi/experimental&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useAccount } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;wagmi&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { encodeFunctionData, erc20Abi, parseUnits } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;viem&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">sendCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">data</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">callStatus</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useSendCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">data</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">callReceipts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useWaitForCallsStatus</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    id: callStatus?.id</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> callSucceeded</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> callReceipts?.status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;success&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> callPending</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> callReceipts?.status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;pending&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (callSucceeded) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transactionHash</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> callReceipts.receipts[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].transactionHash</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nBatua supports the experimental useSendCalls hook from wagmi for batch transactions:\nimport { useSendCalls, useWaitForCallsStatus } from &quot;wagmi/experimental&quot;\nimport { useAccount } from &quot;wagmi&quot;\nimport { encodeFunctionData, erc20Abi, parseUnits } from &quot;viem&quot;\n \nconst account = useAccount()\nconst { sendCalls, data: callStatus } = useSendCalls()\n \nconst { data: callReceipts } = useWaitForCallsStatus({\n    id: callStatus?.id\n})\n \nconst callSucceeded = callReceipts?.status === &quot;success&quot;\nconst callPending = callReceipts?.status === &quot;pending&quot;\n \nif (callSucceeded) {\n    const transactionHash = callReceipts.receipts[0].transactionHash\n}\n","title":"Using useSendCalls","titles":["Batch Transactions"]},"2":{"href":"/batch-transactions#example-batch-erc-20-operations","html":"\n<p>Here&#x27;s a complete example of batching multiple ERC-20 operations:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useCallback } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;react&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { generatePrivateKey, privateKeyToAccount } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;viem/accounts&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sendBatchTransactionCallback</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useCallback</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">account.address) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate random addresses for demo</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> randomAddressOne</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> privateKeyToAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generatePrivateKey</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()).address</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> randomAddressTwo</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> privateKeyToAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generatePrivateKey</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()).address</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    sendCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        calls: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                to: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST_ERC20_TOKEN_ADDRESS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                data: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    abi: erc20Abi,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    functionName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transfer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    args: [randomAddressOne, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parseUnits</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                to: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST_ERC20_TOKEN_ADDRESS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                data: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    abi: erc20Abi,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    functionName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transfer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    args: [randomAddressTwo, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parseUnits</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, [account.address, sendCalls])</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete example of batching multiple ERC-20 operations:\nimport { useCallback } from &quot;react&quot;\nimport { generatePrivateKey, privateKeyToAccount } from &quot;viem/accounts&quot;\n \nconst sendBatchTransactionCallback = useCallback(async () =&gt; {\n    if (!account.address) return\n \n    // Generate random addresses for demo\n    const randomAddressOne = privateKeyToAccount(generatePrivateKey()).address\n    const randomAddressTwo = privateKeyToAccount(generatePrivateKey()).address\n \n    sendCalls({\n        calls: [\n            {\n                to: TEST_ERC20_TOKEN_ADDRESS,\n                data: encodeFunctionData({\n                    abi: erc20Abi,\n                    functionName: &quot;transfer&quot;,\n                    args: [randomAddressOne, parseUnits(&quot;1&quot;, 6)]\n                })\n            },\n            {\n                to: TEST_ERC20_TOKEN_ADDRESS,\n                data: encodeFunctionData({\n                    abi: erc20Abi,\n                    functionName: &quot;transfer&quot;,\n                    args: [randomAddressTwo, parseUnits(&quot;1&quot;, 6)]\n                })\n            }\n        ]\n    })\n}, [account.address, sendCalls])\n","title":"Example: Batch ERC-20 Operations","titles":["Batch Transactions"]},"3":{"href":"/batch-transactions#monitoring-batch-status","html":"\n<p>You can monitor the status of your batch transactions:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Check if batch is pending</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (callReceipts?.status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;pending&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Batch transaction is pending...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Check if batch succeeded</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (callReceipts?.status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;success&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Batch transaction succeeded!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Access individual transaction receipts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    callReceipts.receipts.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">forEach</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">((</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">receipt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">index</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`Transaction ${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">index</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}:`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, receipt.transactionHash)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Check if batch failed</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (callReceipts?.status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;reverted&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Batch transaction failed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nYou can monitor the status of your batch transactions:\n// Check if batch is pending\nif (callReceipts?.status === &quot;pending&quot;) {\n    console.log(&quot;Batch transaction is pending...&quot;)\n}\n \n// Check if batch succeeded\nif (callReceipts?.status === &quot;success&quot;) {\n    console.log(&quot;Batch transaction succeeded!&quot;)\n    // Access individual transaction receipts\n    callReceipts.receipts.forEach((receipt, index) =&gt; {\n        console.log(`Transaction ${index + 1}:`, receipt.transactionHash)\n    })\n}\n \n// Check if batch failed\nif (callReceipts?.status === &quot;reverted&quot;) {\n    console.log(&quot;Batch transaction failed&quot;)\n}\n","title":"Monitoring Batch Status","titles":["Batch Transactions"]},"4":{"href":"/batch-transactions#benefits-of-batch-transactions","html":"\n","isPage":false,"text":"\n","title":"Benefits of Batch Transactions","titles":["Batch Transactions"]},"5":{"href":"/batch-transactions#gas-efficiency","html":"\n<ul>\n<li><strong>Reduced overhead</strong>: Only one transaction fee instead of multiple</li>\n<li><strong>Lower total cost</strong>: Batching operations can significantly reduce gas costs</li>\n<li><strong>Atomic execution</strong>: All operations succeed or fail together</li>\n</ul>\n","isPage":false,"text":"\n\nReduced overhead: Only one transaction fee instead of multiple\nLower total cost: Batching operations can significantly reduce gas costs\nAtomic execution: All operations succeed or fail together\n\n","title":"Gas Efficiency","titles":["Batch Transactions","Benefits of Batch Transactions"]},"6":{"href":"/batch-transactions#better-ux","html":"\n<ul>\n<li><strong>Single signature</strong>: Users only need to approve once</li>\n<li><strong>Faster execution</strong>: All operations happen in one block</li>\n<li><strong>Simplified flow</strong>: Fewer confirmation dialogs</li>\n</ul>\n","isPage":false,"text":"\n\nSingle signature: Users only need to approve once\nFaster execution: All operations happen in one block\nSimplified flow: Fewer confirmation dialogs\n\n","title":"Better UX","titles":["Batch Transactions","Benefits of Batch Transactions"]},"7":{"href":"/batch-transactions#use-cases","html":"\n<p>Common scenarios where batch transactions are beneficial:</p>\n<ol>\n<li><strong>Multi-token transfers</strong>: Send multiple tokens in one transaction</li>\n<li><strong>DeFi operations</strong>: Approve and swap tokens atomically</li>\n<li><strong>NFT operations</strong>: Mint multiple NFTs or transfer multiple tokens</li>\n<li><strong>Contract interactions</strong>: Call multiple contract functions together</li>\n</ol>\n","isPage":false,"text":"\nCommon scenarios where batch transactions are beneficial:\n\nMulti-token transfers: Send multiple tokens in one transaction\nDeFi operations: Approve and swap tokens atomically\nNFT operations: Mint multiple NFTs or transfer multiple tokens\nContract interactions: Call multiple contract functions together\n\n","title":"Use Cases","titles":["Batch Transactions","Benefits of Batch Transactions"]},"8":{"href":"/batch-transactions#error-handling","html":"\n<p>When working with batch transactions, implement proper error handling:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> handleBatchTransaction</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useCallback</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    try</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">account.address) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            throw</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Wallet not connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        await</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> sendCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            calls: [</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">                // Your batch operations here</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">catch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (error) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Batch transaction failed:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, error)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Handle error appropriately</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, [account.address, sendCalls])</span></span></code></pre>\n","isPage":false,"text":"\nWhen working with batch transactions, implement proper error handling:\nconst handleBatchTransaction = useCallback(async () =&gt; {\n    try {\n        if (!account.address) {\n            throw new Error(&quot;Wallet not connected&quot;)\n        }\n \n        await sendCalls({\n            calls: [\n                // Your batch operations here\n            ]\n        })\n    } catch (error) {\n        console.error(&quot;Batch transaction failed:&quot;, error)\n        // Handle error appropriately\n    }\n}, [account.address, sendCalls])\n","title":"Error Handling","titles":["Batch Transactions"]},"9":{"href":"/batch-transactions#next-steps","html":"\n<ul>\n<li><a href=\"/try-batua\">Try batch transactions</a> in our interactive demo</li>\n<li>Learn about <a href=\"/customization\">customizing Batua</a></li>\n<li>Explore more <a href=\"/usage\">usage examples</a></li>\n</ul>","isPage":false,"text":"\n\nTry batch transactions in our interactive demo\nLearn about customizing Batua\nExplore more usage examples\n","title":"Next Steps","titles":["Batch Transactions"]},"10":{"href":"/customization#customization","html":"</header>\n<p>Batua is built with shadcn/ui components, which means it automatically inherits your application&#x27;s theme and can be easily customized to match your brand.</p>\n","isPage":true,"text":"\nBatua is built with shadcn/ui components, which means it automatically inherits your application&#x27;s theme and can be easily customized to match your brand.\n","title":"Customization","titles":[]},"11":{"href":"/customization#theme-integration","html":"\n<p>Since Batua uses shadcn/ui components, it will automatically match your existing theme:</p>\n<ul>\n<li><strong>Colors</strong>: Uses your CSS custom properties for colors</li>\n<li><strong>Typography</strong>: Inherits your font settings</li>\n<li><strong>Spacing</strong>: Follows your design system</li>\n<li><strong>Dark/Light mode</strong>: Automatically supports theme switching</li>\n</ul>\n","isPage":false,"text":"\nSince Batua uses shadcn/ui components, it will automatically match your existing theme:\n\nColors: Uses your CSS custom properties for colors\nTypography: Inherits your font settings\nSpacing: Follows your design system\nDark/Light mode: Automatically supports theme switching\n\n","title":"Theme Integration","titles":["Customization"]},"12":{"href":"/customization#visual-customizer","html":"\n<p>For easy visual customization, use our online customizer tool:</p>\n<p><a href=\"https://tweak.batua.sh/\"><strong>Customize Batua →</strong></a></p>\n<p>The customizer allows you to:</p>\n<ul>\n<li>Adjust colors and styling</li>\n<li>Preview changes in real-time</li>\n<li>Generate custom CSS</li>\n<li>Download customized components</li>\n</ul>\n","isPage":false,"text":"\nFor easy visual customization, use our online customizer tool:\nCustomize Batua →\nThe customizer allows you to:\n\nAdjust colors and styling\nPreview changes in real-time\nGenerate custom CSS\nDownload customized components\n\n","title":"Visual Customizer","titles":["Customization"]},"13":{"href":"/customization#manual-customization","html":"\n","isPage":false,"text":"\n","title":"Manual Customization","titles":["Customization"]},"14":{"href":"/customization#styling-components","html":"\n<p>You can override Batua&#x27;s styles by targeting its CSS classes:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">/* Custom button styling */</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">.batua-connect-button</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">linear-gradient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">45</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">deg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, #your-brand-color, #secondary-color);</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    border-radius</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">12</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    font-weight</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">600</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">/* Custom modal styling */</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">.batua-modal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    border-radius</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">16</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    box-shadow</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 20</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 25</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> rgba</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nYou can override Batua&#x27;s styles by targeting its CSS classes:\n/* Custom button styling */\n.batua-connect-button {\n    background: linear-gradient(45deg, #your-brand-color, #secondary-color);\n    border-radius: 12px;\n    font-weight: 600;\n}\n \n/* Custom modal styling */\n.batua-modal {\n    border-radius: 16px;\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n}\n","title":"Styling Components","titles":["Customization","Manual Customization"]},"15":{"href":"/customization#css-custom-properties","html":"\n<p>Batua respects your CSS custom properties. Update these to change the appearance:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">:root</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    --batua-primary</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: #your-primary-color;</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    --batua-secondary</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: #your-secondary-color;</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    --batua-background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: #your-background-color;</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    --batua-foreground</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: #your-text-color;</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    --batua-border</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: #your-border-color;</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    --batua-radius</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">8</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nBatua respects your CSS custom properties. Update these to change the appearance:\n:root {\n    --batua-primary: #your-primary-color;\n    --batua-secondary: #your-secondary-color;\n    --batua-background: #your-background-color;\n    --batua-foreground: #your-text-color;\n    --batua-border: #your-border-color;\n    --batua-radius: 8px;\n}\n","title":"CSS Custom Properties","titles":["Customization","Manual Customization"]},"16":{"href":"/customization#component-customization","html":"\n","isPage":false,"text":"\n","title":"Component Customization","titles":["Customization"]},"17":{"href":"/customization#custom-connect-button","html":"\n<p>You can create a custom connect button while still using Batua&#x27;s functionality:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useConnect } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;wagmi&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> CustomConnectButton</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connectors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useConnect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> batuaConnector</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> connectors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">find</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Batua&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">            onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> batuaConnector </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ connector: batuaConnector })</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">            className</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-custom-button-classes&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">YourCustomIcon</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Connect with Passkey</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nYou can create a custom connect button while still using Batua&#x27;s functionality:\nimport { useConnect } from &quot;wagmi&quot;\n \nfunction CustomConnectButton() {\n    const { connectors, connect } = useConnect()\n    const batuaConnector = connectors.find(c =&gt; c.name === &quot;Batua&quot;)\n    \n    return (\n        &lt;button\n            onClick={() =&gt; batuaConnector &amp;&amp; connect({ connector: batuaConnector })}\n            className=&quot;your-custom-button-classes&quot;\n        &gt;\n            &lt;YourCustomIcon /&gt;\n            Connect with Passkey\n        &lt;/button&gt;\n    )\n}\n","title":"Custom Connect Button","titles":["Customization","Component Customization"]},"18":{"href":"/customization#custom-modal-content","html":"\n<p>Customize the connection modal by wrapping Batua&#x27;s components:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { BatuaModal } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;@/components/ui/batua&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> CustomBatuaModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">BatuaModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">div</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> className</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom-header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">YourLogo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">h2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;Connect to </span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">yourAppName</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">h2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">div</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">BatuaModal.Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">div</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> className</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom-footer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">p</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;Secured by passkeys&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">p</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">div</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">BatuaModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nCustomize the connection modal by wrapping Batua&#x27;s components:\nimport { BatuaModal } from &quot;@/components/ui/batua&quot;\n \nfunction CustomBatuaModal() {\n    return (\n        &lt;BatuaModal&gt;\n            &lt;div className=&quot;custom-header&quot;&gt;\n                &lt;YourLogo /&gt;\n                &lt;h2&gt;Connect to {yourAppName}&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;BatuaModal.Content /&gt;\n            &lt;div className=&quot;custom-footer&quot;&gt;\n                &lt;p&gt;Secured by passkeys&lt;/p&gt;\n            &lt;/div&gt;\n        &lt;/BatuaModal&gt;\n    )\n}\n","title":"Custom Modal Content","titles":["Customization","Component Customization"]},"19":{"href":"/customization#branding-options","html":"\n","isPage":false,"text":"\n","title":"Branding Options","titles":["Customization"]},"20":{"href":"/customization#logo-integration","html":"\n<p>Add your logo to the Batua interface:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> batuaConfig</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    branding: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        logo: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/your-logo.svg&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Your App Name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        colors: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            primary: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;#your-primary-color&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            secondary: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;#your-secondary-color&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAdd your logo to the Batua interface:\nconst batuaConfig = {\n    branding: {\n        logo: &quot;/your-logo.svg&quot;,\n        name: &quot;Your App Name&quot;,\n        colors: {\n            primary: &quot;#your-primary-color&quot;,\n            secondary: &quot;#your-secondary-color&quot;\n        }\n    }\n}\n","title":"Logo Integration","titles":["Customization","Branding Options"]},"21":{"href":"/customization#custom-messages","html":"\n<p>Customize user-facing messages:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> batuaConfig</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        connecting: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connecting to your passkey...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        connected: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Successfully connected!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        error: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connection failed. Please try again.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nCustomize user-facing messages:\nconst batuaConfig = {\n    messages: {\n        connecting: &quot;Connecting to your passkey...&quot;,\n        connected: &quot;Successfully connected!&quot;,\n        error: &quot;Connection failed. Please try again.&quot;\n    }\n}\n","title":"Custom Messages","titles":["Customization","Branding Options"]},"22":{"href":"/customization#advanced-customization","html":"\n","isPage":false,"text":"\n","title":"Advanced Customization","titles":["Customization"]},"23":{"href":"/customization#custom-hooks","html":"\n<p>Create custom hooks that wrap Batua&#x27;s functionality:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useConnect, useAccount } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;wagmi&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useBatuaConnection</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connectors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">isPending</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useConnect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">isConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> batuaConnector</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> connectors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">find</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Batua&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> connectBatua</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (batuaConnector) {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ connector: batuaConnector })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        connectBatua,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        isConnecting: isPending,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        isConnected,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        isAvailable: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">batuaConnector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nCreate custom hooks that wrap Batua&#x27;s functionality:\nimport { useConnect, useAccount } from &quot;wagmi&quot;\n \nexport function useBatuaConnection() {\n    const { connectors, connect, isPending } = useConnect()\n    const { isConnected } = useAccount()\n    \n    const batuaConnector = connectors.find(c =&gt; c.name === &quot;Batua&quot;)\n    \n    const connectBatua = () =&gt; {\n        if (batuaConnector) {\n            connect({ connector: batuaConnector })\n        }\n    }\n    \n    return {\n        connectBatua,\n        isConnecting: isPending,\n        isConnected,\n        isAvailable: !!batuaConnector\n    }\n}\n","title":"Custom Hooks","titles":["Customization","Advanced Customization"]},"24":{"href":"/customization#custom-error-handling","html":"\n<p>Implement custom error handling and user feedback:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useConnect } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;wagmi&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { toast } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;your-toast-library&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> ConnectWithErrorHandling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useConnect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    useEffect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (error) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            toast.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`Connection failed: ${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">error</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">message</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, [error])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Your connect logic here</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nImplement custom error handling and user feedback:\nimport { useConnect } from &quot;wagmi&quot;\nimport { toast } from &quot;your-toast-library&quot;\n \nfunction ConnectWithErrorHandling() {\n    const { connect, error } = useConnect()\n    \n    useEffect(() =&gt; {\n        if (error) {\n            toast.error(`Connection failed: ${error.message}`)\n        }\n    }, [error])\n    \n    // Your connect logic here\n}\n","title":"Custom Error Handling","titles":["Customization","Advanced Customization"]},"25":{"href":"/customization#best-practices","html":"\n","isPage":false,"text":"\n","title":"Best Practices","titles":["Customization"]},"26":{"href":"/customization#accessibility","html":"\n<p>Ensure your customizations maintain accessibility:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">    onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">connectBatua</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">    aria-label</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connect wallet using passkey authentication&quot;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">    className</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus:ring-2 focus:ring-offset-2 focus:ring-blue-500&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Connect Wallet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span></code></pre>\n","isPage":false,"text":"\nEnsure your customizations maintain accessibility:\n&lt;button\n    onClick={connectBatua}\n    aria-label=&quot;Connect wallet using passkey authentication&quot;\n    className=&quot;focus:ring-2 focus:ring-offset-2 focus:ring-blue-500&quot;\n&gt;\n    Connect Wallet\n&lt;/button&gt;\n","title":"Accessibility","titles":["Customization","Best Practices"]},"27":{"href":"/customization#responsive-design","html":"\n<p>Make sure your customizations work across devices:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">.batua-modal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    width</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">%</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    max-width</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">400</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    margin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> auto</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">@media</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">max-width</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">640</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">px</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">    .batua-modal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">        margin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">rem</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">        max-width</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">calc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">%</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">rem</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nMake sure your customizations work across devices:\n.batua-modal {\n    width: 100%;\n    max-width: 400px;\n    margin: 0 auto;\n}\n \n@media (max-width: 640px) {\n    .batua-modal {\n        margin: 1rem;\n        max-width: calc(100% - 2rem);\n    }\n}\n","title":"Responsive Design","titles":["Customization","Best Practices"]},"28":{"href":"/customization#next-steps","html":"\n<ul>\n<li><a href=\"/try-batua\">Try your customizations</a> in our interactive demo</li>\n<li>Learn about <a href=\"/batch-transactions\">batch transactions</a></li>\n<li>Check out the <a href=\"/usage\">usage examples</a></li>\n</ul>","isPage":false,"text":"\n\nTry your customizations in our interactive demo\nLearn about batch transactions\nCheck out the usage examples\n","title":"Next Steps","titles":["Customization"]},"29":{"href":"/getting-started#getting-started","html":"</header>\n<p>Batua is a React-based embedded smart account solution secured by passkeys. It provides an easy way to integrate smart account functionality into your application with support for transaction sponsoring, batch transactions, and seamless theme integration.</p>\n","isPage":true,"text":"\nBatua is a React-based embedded smart account solution secured by passkeys. It provides an easy way to integrate smart account functionality into your application with support for transaction sponsoring, batch transactions, and seamless theme integration.\n","title":"Getting Started","titles":[]},"30":{"href":"/getting-started#what-is-batua","html":"\n<p>Batua is an embedded smart account wallet that:</p>\n<ul>\n<li>Uses <strong>passkeys</strong> for secure authentication (no seed phrases needed)</li>\n<li>Supports <strong>transaction sponsoring</strong> through paymasters</li>\n<li>Enables <strong>batch transactions</strong> for better UX</li>\n<li>Integrates seamlessly with your app&#x27;s theme via <strong>shadcn</strong></li>\n<li>Works with popular libraries like <strong>wagmi</strong>, <strong>viem</strong>, <strong>ethers</strong>, <strong>privy</strong>, and <strong>dynamic</strong></li>\n<li>Gives you <strong>complete code ownership</strong> - no external dependencies</li>\n</ul>\n","isPage":false,"text":"\nBatua is an embedded smart account wallet that:\n\nUses passkeys for secure authentication (no seed phrases needed)\nSupports transaction sponsoring through paymasters\nEnables batch transactions for better UX\nIntegrates seamlessly with your app&#x27;s theme via shadcn\nWorks with popular libraries like wagmi, viem, ethers, privy, and dynamic\nGives you complete code ownership - no external dependencies\n\n","title":"What is Batua?","titles":["Getting Started"]},"31":{"href":"/getting-started#how-it-works","html":"\n<ol>\n<li><strong>Passkey Authentication</strong>: Users authenticate using their device&#x27;s built-in biometric authentication (Face ID, Touch ID, Windows Hello, etc.)</li>\n<li><strong>Smart Account Creation</strong>: A smart account is created and controlled by the passkey</li>\n<li><strong>EIP-6963 Compatibility</strong>: Batua appears as a regular wallet in your dApp, compatible with all existing wallet connection libraries</li>\n<li><strong>Transaction Sponsoring</strong>: Optionally sponsor user transactions through Pimlico&#x27;s paymaster service</li>\n<li><strong>Batch Operations</strong>: Send multiple transactions in a single batch for better efficiency</li>\n</ol>\n","isPage":false,"text":"\n\nPasskey Authentication: Users authenticate using their device&#x27;s built-in biometric authentication (Face ID, Touch ID, Windows Hello, etc.)\nSmart Account Creation: A smart account is created and controlled by the passkey\nEIP-6963 Compatibility: Batua appears as a regular wallet in your dApp, compatible with all existing wallet connection libraries\nTransaction Sponsoring: Optionally sponsor user transactions through Pimlico&#x27;s paymaster service\nBatch Operations: Send multiple transactions in a single batch for better efficiency\n\n","title":"How it Works","titles":["Getting Started"]},"32":{"href":"/getting-started#why-choose-batua","html":"\n","isPage":false,"text":"\n","title":"Why Choose Batua?","titles":["Getting Started"]},"33":{"href":"/getting-started#for-users","html":"\n<ul>\n<li><strong>No seed phrases</strong> - authenticate with biometrics</li>\n<li><strong>Sponsored transactions</strong> - no need to hold ETH for gas</li>\n<li><strong>Faster transactions</strong> - batch multiple operations</li>\n<li><strong>Secure</strong> - passkeys are more secure than traditional private keys</li>\n</ul>\n","isPage":false,"text":"\n\nNo seed phrases - authenticate with biometrics\nSponsored transactions - no need to hold ETH for gas\nFaster transactions - batch multiple operations\nSecure - passkeys are more secure than traditional private keys\n\n","title":"For Users","titles":["Getting Started","Why Choose Batua?"]},"34":{"href":"/getting-started#for-developers","html":"\n<ul>\n<li><strong>Easy integration</strong> - works with existing wallet connection code</li>\n<li><strong>Complete control</strong> - own the entire codebase</li>\n<li><strong>Theme consistency</strong> - matches your app&#x27;s design</li>\n<li><strong>Flexible</strong> - works with any React framework</li>\n</ul>\n","isPage":false,"text":"\n\nEasy integration - works with existing wallet connection code\nComplete control - own the entire codebase\nTheme consistency - matches your app&#x27;s design\nFlexible - works with any React framework\n\n","title":"For Developers","titles":["Getting Started","Why Choose Batua?"]},"35":{"href":"/getting-started#next-steps","html":"\n<p>Ready to integrate Batua? Continue to the <a href=\"/installation\">Installation</a> guide to get started.</p>","isPage":false,"text":"\nReady to integrate Batua? Continue to the Installation guide to get started.","title":"Next Steps","titles":["Getting Started"]},"36":{"href":"/installation#installation","html":"</header>\n","isPage":true,"text":"\n","title":"Installation","titles":[]},"37":{"href":"/installation#install-using-the-cli","html":"\n<p>To install Batua using the <code>shadcn</code> CLI, use the <code>add</code> command followed by the URL of the registry item.</p>\n<div class=\"code-group\"><div data-title=\"pnpm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"pnpm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dlx</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> shadcn@latest</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://batua.sh/install</span></span></code></pre></div><div data-title=\"npm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"npm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npx</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> shadcn@latest</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://batua.sh/install</span></span></code></pre></div><div data-title=\"yarn\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"yarn\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dlx</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> shadcn@latest</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://batua.sh/install</span></span></code></pre></div><div data-title=\"bun\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"bun\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bunx</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --bun</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> shadcn@latest</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://batua.sh/install</span></span></code></pre></div></div>\n","isPage":false,"text":"\nTo install Batua using the shadcn CLI, use the add command followed by the URL of the registry item.\npnpm dlx shadcn@latest add https://batua.sh/installnpx shadcn@latest add https://batua.sh/installyarn dlx shadcn@latest add https://batua.sh/installbunx --bun shadcn@latest add https://batua.sh/install\n","title":"Install using the CLI","titles":["Installation"]},"38":{"href":"/installation#what-gets-installed","html":"\n<p>The installation will add the following to your project:</p>\n<ul>\n<li><strong>Batua component</strong> - The main wallet component</li>\n<li><strong>Required dependencies</strong> - All necessary packages for smart account functionality</li>\n<li><strong>Type definitions</strong> - TypeScript support out of the box</li>\n<li><strong>Styling</strong> - Tailwind CSS classes that match your theme</li>\n</ul>\n","isPage":false,"text":"\nThe installation will add the following to your project:\n\nBatua component - The main wallet component\nRequired dependencies - All necessary packages for smart account functionality\nType definitions - TypeScript support out of the box\nStyling - Tailwind CSS classes that match your theme\n\n","title":"What gets installed?","titles":["Installation"]},"39":{"href":"/installation#prerequisites","html":"\n<p>Before installing Batua, make sure you have:</p>\n<ol>\n<li><strong>React 18+</strong> - Batua is built for modern React</li>\n<li><strong>shadcn/ui setup</strong> - Your project should have shadcn/ui configured</li>\n<li><strong>Tailwind CSS</strong> - Required for styling</li>\n<li><strong>TypeScript</strong> (recommended) - For the best development experience</li>\n</ol>\n","isPage":false,"text":"\nBefore installing Batua, make sure you have:\n\nReact 18+ - Batua is built for modern React\nshadcn/ui setup - Your project should have shadcn/ui configured\nTailwind CSS - Required for styling\nTypeScript (recommended) - For the best development experience\n\n","title":"Prerequisites","titles":["Installation"]},"40":{"href":"/installation#next-steps","html":"\n<p>After installation, you&#x27;ll need to:</p>\n<ol>\n<li><a href=\"/usage#step-1-set-up-passkey-server\">Set up your Passkey Server</a></li>\n<li><a href=\"/usage#step-2-implement-batua\">Configure Batua in your app</a></li>\n<li><a href=\"/try-batua\">Test the integration</a></li>\n</ol>\n<p>Continue to the <a href=\"/usage\">Usage</a> guide for detailed setup instructions.</p>","isPage":false,"text":"\nAfter installation, you&#x27;ll need to:\n\nSet up your Passkey Server\nConfigure Batua in your app\nTest the integration\n\nContinue to the Usage guide for detailed setup instructions.","title":"Next Steps","titles":["Installation"]},"41":{"href":"/try-batua#try-batua","html":"</header>\n<p>Experience Batua in action with our interactive demo. Test all the features including passkey authentication, transaction sponsoring, and batch transactions.</p>\n","isPage":true,"text":"\nExperience Batua in action with our interactive demo. Test all the features including passkey authentication, transaction sponsoring, and batch transactions.\n","title":"Try Batua","titles":[]},"42":{"href":"/try-batua#interactive-demo","html":"\n<p>Our demo showcases all of Batua&#x27;s key features:</p>\n<ul>\n<li><strong>Passkey Authentication</strong>: Connect using your device&#x27;s biometric authentication</li>\n<li><strong>Transaction Sponsoring</strong>: Send transactions without holding ETH for gas</li>\n<li><strong>Batch Transactions</strong>: Execute multiple operations in a single transaction</li>\n<li><strong>Real-time Balance Updates</strong>: See your test token balance update in real-time</li>\n</ul>\n<p><a href=\"/\"><strong>Launch Interactive Demo →</strong></a></p>\n","isPage":false,"text":"\nOur demo showcases all of Batua&#x27;s key features:\n\nPasskey Authentication: Connect using your device&#x27;s biometric authentication\nTransaction Sponsoring: Send transactions without holding ETH for gas\nBatch Transactions: Execute multiple operations in a single transaction\nReal-time Balance Updates: See your test token balance update in real-time\n\nLaunch Interactive Demo →\n","title":"Interactive Demo","titles":["Try Batua"]},"43":{"href":"/try-batua#what-you-can-test","html":"\n","isPage":false,"text":"\n","title":"What You Can Test","titles":["Try Batua"]},"44":{"href":"/try-batua#1-wallet-connection","html":"\n<ul>\n<li>Connect using passkeys (Face ID, Touch ID, Windows Hello, etc.)</li>\n<li>No seed phrases or private keys needed</li>\n<li>Secure authentication using your device&#x27;s built-in security</li>\n</ul>\n","isPage":false,"text":"\n\nConnect using passkeys (Face ID, Touch ID, Windows Hello, etc.)\nNo seed phrases or private keys needed\nSecure authentication using your device&#x27;s built-in security\n\n","title":"1. Wallet Connection","titles":["Try Batua","What You Can Test"]},"45":{"href":"/try-batua#2-single-transactions","html":"\n<ul>\n<li>Mint test ERC-20 tokens</li>\n<li>See transaction status and hash</li>\n<li>Experience sponsored transactions (no gas fees)</li>\n</ul>\n","isPage":false,"text":"\n\nMint test ERC-20 tokens\nSee transaction status and hash\nExperience sponsored transactions (no gas fees)\n\n","title":"2. Single Transactions","titles":["Try Batua","What You Can Test"]},"46":{"href":"/try-batua#3-batch-transactions","html":"\n<ul>\n<li>Send multiple token transfers in one transaction</li>\n<li>Approve and transfer tokens atomically</li>\n<li>Experience the efficiency of batched operations</li>\n</ul>\n","isPage":false,"text":"\n\nSend multiple token transfers in one transaction\nApprove and transfer tokens atomically\nExperience the efficiency of batched operations\n\n","title":"3. Batch Transactions","titles":["Try Batua","What You Can Test"]},"47":{"href":"/try-batua#4-real-time-updates","html":"\n<ul>\n<li>Balance updates every 5 seconds</li>\n<li>Transaction status monitoring</li>\n<li>Live feedback on all operations</li>\n</ul>\n","isPage":false,"text":"\n\nBalance updates every 5 seconds\nTransaction status monitoring\nLive feedback on all operations\n\n","title":"4. Real-time Updates","titles":["Try Batua","What You Can Test"]},"48":{"href":"/try-batua#demo-environment","html":"\n<p>The demo runs on <strong>Sepolia testnet</strong> with:</p>\n<ul>\n<li><strong>Test ERC-20 Token</strong>: A custom token for testing transfers</li>\n<li><strong>Sponsored Transactions</strong>: All transactions are sponsored (no gas fees)</li>\n<li><strong>Safe Environment</strong>: No real funds at risk</li>\n</ul>\n","isPage":false,"text":"\nThe demo runs on Sepolia testnet with:\n\nTest ERC-20 Token: A custom token for testing transfers\nSponsored Transactions: All transactions are sponsored (no gas fees)\nSafe Environment: No real funds at risk\n\n","title":"Demo Environment","titles":["Try Batua"]},"49":{"href":"/try-batua#getting-test-tokens","html":"\n<p>The demo includes a &quot;Mint test erc20 tokens&quot; button that will:</p>\n<ol>\n<li>Create a transaction to mint 100 test tokens</li>\n<li>Add them to your smart account balance</li>\n<li>Enable you to test batch transfers</li>\n</ol>\n","isPage":false,"text":"\nThe demo includes a &quot;Mint test erc20 tokens&quot; button that will:\n\nCreate a transaction to mint 100 test tokens\nAdd them to your smart account balance\nEnable you to test batch transfers\n\n","title":"Getting Test Tokens","titles":["Try Batua"]},"50":{"href":"/try-batua#understanding-the-code","html":"\n<p>The demo is built with the same code you&#x27;ll use in your application:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Connect to Batua</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connectors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useConnect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> batuaConnector</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> connectors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">find</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Batua&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send batch transactions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">sendCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useSendCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    calls: [</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Multiple operations here</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n","isPage":false,"text":"\nThe demo is built with the same code you&#x27;ll use in your application:\n// Connect to Batua\nconst { connectors, connect } = useConnect()\nconst batuaConnector = connectors.find(c =&gt; c.name === &quot;Batua&quot;)\n \n// Send batch transactions\nconst { sendCalls } = useSendCalls()\nsendCalls({\n    calls: [\n        // Multiple operations here\n    ]\n})\n","title":"Understanding the Code","titles":["Try Batua"]},"51":{"href":"/try-batua#troubleshooting","html":"\n","isPage":false,"text":"\n","title":"Troubleshooting","titles":["Try Batua"]},"52":{"href":"/try-batua#passkey-issues","html":"\n<ul>\n<li><strong>Not supported</strong>: Ensure your device supports passkeys</li>\n<li><strong>Registration failed</strong>: Try using a different browser or device</li>\n<li><strong>Authentication failed</strong>: Make sure biometrics are enabled</li>\n</ul>\n","isPage":false,"text":"\n\nNot supported: Ensure your device supports passkeys\nRegistration failed: Try using a different browser or device\nAuthentication failed: Make sure biometrics are enabled\n\n","title":"Passkey Issues","titles":["Try Batua","Troubleshooting"]},"53":{"href":"/try-batua#transaction-issues","html":"\n<ul>\n<li><strong>Transaction pending</strong>: Wait for confirmation (usually 10-30 seconds on Sepolia)</li>\n<li><strong>Transaction failed</strong>: Check the console for error details</li>\n<li><strong>Balance not updating</strong>: Wait for the next balance refresh (every 5 seconds)</li>\n</ul>\n","isPage":false,"text":"\n\nTransaction pending: Wait for confirmation (usually 10-30 seconds on Sepolia)\nTransaction failed: Check the console for error details\nBalance not updating: Wait for the next balance refresh (every 5 seconds)\n\n","title":"Transaction Issues","titles":["Try Batua","Troubleshooting"]},"54":{"href":"/try-batua#next-steps","html":"\n<p>After trying the demo:</p>\n<ol>\n<li><strong>Install Batua</strong> in your project using the <a href=\"/installation\">installation guide</a></li>\n<li><strong>Configure</strong> your setup following the <a href=\"/usage\">usage instructions</a></li>\n<li><strong>Customize</strong> the appearance to match your brand using our <a href=\"/customization\">customization guide</a></li>\n<li><strong>Implement batch transactions</strong> using our <a href=\"/batch-transactions\">batch transactions guide</a></li>\n</ol>\n","isPage":false,"text":"\nAfter trying the demo:\n\nInstall Batua in your project using the installation guide\nConfigure your setup following the usage instructions\nCustomize the appearance to match your brand using our customization guide\nImplement batch transactions using our batch transactions guide\n\n","title":"Next Steps","titles":["Try Batua"]},"55":{"href":"/try-batua#feedback","html":"\n<p>Found an issue or have suggestions? We&#x27;d love to hear from you:</p>\n<ul>\n<li><a href=\"https://github.com/pimlicolabs/batua/issues\">GitHub Issues</a></li>\n<li><a href=\"https://github.com/pimlicolabs/batua/discussions\">GitHub Discussions</a></li>\n</ul>\n<hr/>\n<p>Ready to integrate Batua into your application? Start with our <a href=\"/getting-started\">Getting Started</a> guide.</p>","isPage":false,"text":"\nFound an issue or have suggestions? We&#x27;d love to hear from you:\n\nGitHub Issues\nGitHub Discussions\n\n\nReady to integrate Batua into your application? Start with our Getting Started guide.","title":"Feedback","titles":["Try Batua"]},"56":{"href":"/usage#usage","html":"</header>\n","isPage":true,"text":"\n","title":"Usage","titles":[]},"57":{"href":"/usage#step-1-set-up-passkey-server","html":"\n<p>Before implementing Batua, you need to configure your passkey server:</p>\n<ol>\n<li>Go to <a href=\"https://dashboard.pimlico.io/passkey-server\">https://dashboard.pimlico.io/passkey-server</a></li>\n<li>Create a new passkey server configuration</li>\n<li>Configure your domain and settings</li>\n<li>Note down your configuration details for the next step</li>\n</ol>\n","isPage":false,"text":"\nBefore implementing Batua, you need to configure your passkey server:\n\nGo to https://dashboard.pimlico.io/passkey-server\nCreate a new passkey server configuration\nConfigure your domain and settings\nNote down your configuration details for the next step\n\n","title":"Step 1: Set up Passkey Server","titles":["Usage"]},"58":{"href":"/usage#step-2-implement-batua","html":"\n<p>After installing Batua, you can integrate it into your application:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Batua } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;@/lib/batua&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { sepolia } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;viem/chains&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { http } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;viem/transport&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> pimlicoApiKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;your-pimlico-api-key&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Batua.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">create</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rpc: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transports: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            [sepolia.id]: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://ethereum-sepolia-rpc.publicnode.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // optional</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    paymaster: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transports: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            [sepolia.id]: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                `https://api.pimlico.io/v2/${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sepolia</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">id</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}/rpc?apikey=${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">pimlicoApiKey</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // optional</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        context: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            sponsorshipPolicyId: process.env.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">NEXT_PUBLIC_SPONSORSHIP_POLICY_ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    bundler: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transports: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            [sepolia.id]: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                `https://api.pimlico.io/v2/${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sepolia</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">id</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}/rpc?apikey=${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">pimlicoApiKey</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n","isPage":false,"text":"\nAfter installing Batua, you can integrate it into your application:\nimport { Batua } from &quot;@/lib/batua&quot;\nimport { sepolia } from &quot;viem/chains&quot;\nimport { http } from &quot;viem/transport&quot;\n \nconst pimlicoApiKey = &quot;your-pimlico-api-key&quot;\n \nBatua.create({\n    rpc: {\n        transports: {\n            [sepolia.id]: http(&quot;https://ethereum-sepolia-rpc.publicnode.com&quot;)\n        }\n    },\n    // optional\n    paymaster: {\n        transports: {\n            [sepolia.id]: http(\n                `https://api.pimlico.io/v2/${sepolia.id}/rpc?apikey=${pimlicoApiKey}`\n            )\n        },\n        // optional\n        context: {\n            sponsorshipPolicyId: process.env.NEXT_PUBLIC_SPONSORSHIP_POLICY_ID\n        }\n    },\n    bundler: {\n        transports: {\n            [sepolia.id]: http(\n                `https://api.pimlico.io/v2/${sepolia.id}/rpc?apikey=${pimlicoApiKey}`\n            )\n        }\n    }\n})\n","title":"Step 2: Implement Batua","titles":["Usage"]},"59":{"href":"/usage#configuration-options","html":"\n","isPage":false,"text":"\n","title":"Configuration Options","titles":["Usage"]},"60":{"href":"/usage#required-configuration","html":"\n<ul>\n<li><strong>rpc.transports</strong>: RPC endpoints for each chain you want to support</li>\n<li><strong>bundler.transports</strong>: Bundler endpoints for UserOperation submission</li>\n</ul>\n","isPage":false,"text":"\n\nrpc.transports: RPC endpoints for each chain you want to support\nbundler.transports: Bundler endpoints for UserOperation submission\n\n","title":"Required Configuration","titles":["Usage","Configuration Options"]},"61":{"href":"/usage#optional-configuration","html":"\n<ul>\n<li><strong>paymaster.transports</strong>: Paymaster endpoints for transaction sponsoring</li>\n<li><strong>paymaster.context</strong>: Additional context for paymaster (like sponsorship policy ID)</li>\n</ul>\n","isPage":false,"text":"\n\npaymaster.transports: Paymaster endpoints for transaction sponsoring\npaymaster.context: Additional context for paymaster (like sponsorship policy ID)\n\n","title":"Optional Configuration","titles":["Usage","Configuration Options"]},"62":{"href":"/usage#integration-with-wagmi","html":"\n<p>After creating Batua, you can use your regular wagmi/ethers libraries and Batua will behave like an injected wallet compatible with EIP-6963.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useConnect } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;wagmi&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> ConnectWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connectors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useConnect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">div</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">            {</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">connectors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">((</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">connector</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">                    key</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">connector.uid</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">                    onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ connector })</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                &gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">                    {</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">connector.name</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                &lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ))</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">div</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Batua will appear as one of the available connectors with the name &quot;Batua&quot;.</p>\n","isPage":false,"text":"\nAfter creating Batua, you can use your regular wagmi/ethers libraries and Batua will behave like an injected wallet compatible with EIP-6963.\nimport { useConnect } from &quot;wagmi&quot;\n \nfunction ConnectWallet() {\n    const { connectors, connect } = useConnect()\n    \n    return (\n        &lt;div&gt;\n            {connectors.map((connector) =&gt; (\n                &lt;button\n                    key={connector.uid}\n                    onClick={() =&gt; connect({ connector })}\n                &gt;\n                    {connector.name}\n                &lt;/button&gt;\n            ))}\n        &lt;/div&gt;\n    )\n}\nBatua will appear as one of the available connectors with the name &quot;Batua&quot;.\n","title":"Integration with Wagmi","titles":["Usage"]},"63":{"href":"/usage#environment-variables","html":"\n<p>For production use, make sure to set up your environment variables:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">NEXT_PUBLIC_PIMLICO_API_KEY</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">your-pimlico-api-key</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">NEXT_PUBLIC_SPONSORSHIP_POLICY_ID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">your-sponsorship-policy-id</span></span></code></pre>\n","isPage":false,"text":"\nFor production use, make sure to set up your environment variables:\nNEXT_PUBLIC_PIMLICO_API_KEY=your-pimlico-api-key\nNEXT_PUBLIC_SPONSORSHIP_POLICY_ID=your-sponsorship-policy-id\n","title":"Environment Variables","titles":["Usage"]},"64":{"href":"/usage#next-steps","html":"\n<ul>\n<li>Learn about <a href=\"/batch-transactions\">Batch Transactions</a></li>\n<li><a href=\"/customization\">Customize Batua</a> to match your brand</li>\n<li><a href=\"/try-batua\">Try Batua</a> in our interactive demo</li>\n</ul>","isPage":false,"text":"\n\nLearn about Batch Transactions\nCustomize Batua to match your brand\nTry Batua in our interactive demo\n","title":"Next Steps","titles":["Usage"]}},"dirtCount":0,"index":[["variables",{"0":{"63":1},"2":{"63":1}}],["v2",{"2":{"58":2}}],["via",{"2":{"30":1}}],["visual",{"0":{"12":1},"2":{"12":1}}],["viem",{"2":{"1":1,"2":1,"30":1,"58":2}}],["30",{"2":{"53":1}}],["3",{"0":{"46":1}}],["4",{"0":{"47":1}}],["400px",{"2":{"27":1}}],["45deg",{"2":{"14":1}}],["5",{"2":{"47":1,"53":1}}],["500",{"2":{"26":1}}],["5px",{"2":{"14":1}}],["8px",{"2":{"15":1}}],["2rem",{"2":{"27":1}}],["2",{"0":{"45":1,"58":1},"2":{"26":2}}],["25px",{"2":{"14":1}}],["20px",{"2":{"14":1}}],["20",{"0":{"2":1},"2":{"2":1,"45":1,"48":1}}],["→",{"2":{"12":1,"42":1}}],["ll",{"2":{"40":1,"50":1}}],["launch",{"2":{"42":1}}],["latest",{"2":{"37":4}}],["label=",{"2":{"26":1}}],["lt",{"2":{"17":3,"18":12,"26":2,"62":4}}],["lib",{"2":{"58":1}}],["libraries",{"2":{"30":1,"31":1,"62":1}}],["library",{"2":{"24":1}}],["live",{"2":{"47":1}}],["like",{"2":{"30":1,"61":1,"62":1}}],["linear",{"2":{"14":1}}],["light",{"2":{"11":1}}],["learn",{"2":{"9":1,"28":1,"64":1}}],["love",{"2":{"55":1}}],["lower",{"2":{"5":1}}],["logic",{"2":{"24":1}}],["logo",{"0":{"20":1},"2":{"20":3}}],["log",{"2":{"3":4}}],["no",{"2":{"30":2,"33":2,"44":1,"45":1,"48":2}}],["note",{"2":{"57":1}}],["not",{"2":{"8":1,"52":1,"53":1}}],["name",{"2":{"17":1,"20":2,"23":1,"50":1,"62":2}}],["necessary",{"2":{"38":1}}],["next",{"0":{"9":1,"28":1,"35":1,"40":1,"54":1,"64":1},"2":{"53":1,"57":1,"58":1,"63":2}}],["new",{"2":{"8":1,"57":1}}],["needed",{"2":{"30":1,"44":1}}],["need",{"2":{"6":1,"33":1,"40":1,"57":1}}],["nfts",{"2":{"7":1}}],["nft",{"2":{"7":1}}],["we",{"2":{"55":1}}],["weight",{"2":{"14":1}}],["works",{"0":{"31":1},"2":{"30":1,"34":2}}],["work",{"2":{"27":1}}],["working",{"2":{"8":1}}],["wrap",{"2":{"23":1}}],["wrapping",{"2":{"18":1}}],["windows",{"2":{"31":1,"44":1}}],["width",{"2":{"27":4}}],["will",{"2":{"11":1,"38":1,"49":1,"62":2}}],["without",{"2":{"42":1}}],["with",{"0":{"62":1},"2":{"8":1,"10":1,"17":1,"29":1,"30":2,"31":1,"33":1,"34":2,"41":1,"48":1,"50":1,"55":1,"62":2}}],["why",{"0":{"32":1},"1":{"33":1,"34":1}}],["what",{"0":{"30":1,"38":1,"43":1},"1":{"44":1,"45":1,"46":1,"47":1}}],["while",{"2":{"17":1}}],["which",{"2":{"10":1}}],["when",{"2":{"8":1}}],["where",{"2":{"7":1}}],["want",{"2":{"60":1}}],["wait",{"2":{"53":2}}],["way",{"2":{"29":1}}],["wallet",{"0":{"44":1},"2":{"8":1,"26":2,"30":1,"31":2,"34":1,"38":1,"62":1}}],["wagmi",{"0":{"62":1},"2":{"1":3,"17":1,"23":1,"24":1,"30":1,"62":2}}],["understanding",{"0":{"50":1}}],["updating",{"2":{"53":1}}],["updates",{"0":{"47":1},"2":{"42":1,"47":1}}],["update",{"2":{"15":1,"42":1}}],["up",{"0":{"57":1},"2":{"40":1,"63":1}}],["url",{"2":{"37":1}}],["uid",{"2":{"62":1}}],["ui",{"2":{"10":1,"11":1,"18":1,"39":2}}],["ux",{"0":{"6":1},"2":{"30":1}}],["usually",{"2":{"53":1}}],["usage",{"0":{"56":1},"1":{"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1},"2":{"9":1,"28":1,"40":1,"54":1}}],["useeffect",{"2":{"24":1}}],["usebatuaconnection",{"2":{"23":1}}],["useconnect",{"2":{"17":2,"23":2,"24":2,"50":1,"62":2}}],["usecallback",{"2":{"2":2,"8":1}}],["uses",{"2":{"11":2,"30":1}}],["usesendcalls",{"0":{"1":1},"2":{"1":3,"50":1}}],["use",{"0":{"7":1},"2":{"12":1,"37":1,"50":1,"62":1,"63":1}}],["useaccount",{"2":{"1":2,"23":2}}],["usewaitforcallsstatus",{"2":{"1":2}}],["useroperation",{"2":{"60":1}}],["users",{"0":{"33":1},"2":{"6":1,"31":1}}],["user",{"2":{"0":1,"21":1,"24":1,"31":1}}],["using",{"0":{"1":1,"37":1},"2":{"0":1,"17":1,"26":1,"31":1,"37":1,"42":1,"44":2,"52":1,"54":3}}],["`https",{"2":{"58":2}}],["`connection",{"2":{"24":1}}],["`",{"2":{"3":1,"24":1,"58":2}}],["`transaction",{"2":{"3":1}}],["+",{"2":{"3":1}}],["$",{"2":{"3":1,"24":1,"58":2}}],["yourappname",{"2":{"18":1}}],["yourlogo",{"2":{"18":1}}],["yourcustomicon",{"2":{"17":1}}],["your",{"2":{"3":1,"8":1,"10":2,"11":4,"14":1,"15":6,"17":1,"20":5,"21":1,"24":2,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"34":1,"38":2,"39":1,"40":2,"42":2,"44":1,"49":1,"50":1,"52":1,"54":3,"55":1,"57":3,"58":2,"62":1,"63":1,"64":1}}],["you",{"0":{"43":1},"1":{"44":1,"45":1,"46":1,"47":1},"2":{"3":1,"12":1,"14":1,"17":1,"30":1,"39":1,"40":1,"49":1,"50":1,"55":1,"57":1,"58":1,"60":1,"62":1}}],["media",{"2":{"27":1}}],["message",{"2":{"24":1}}],["messages",{"0":{"21":1},"2":{"21":2}}],["means",{"2":{"10":1}}],["map",{"2":{"62":1}}],["main",{"2":{"38":1}}],["maintain",{"2":{"26":1}}],["margin",{"2":{"27":2}}],["max",{"2":{"27":3}}],["make",{"2":{"27":1,"39":1,"52":1,"63":1}}],["manual",{"0":{"13":1},"1":{"14":1,"15":1}}],["matches",{"2":{"34":1}}],["match",{"2":{"10":1,"11":1,"38":1,"54":1,"64":1}}],["modal",{"0":{"18":1},"2":{"14":2,"18":1,"27":2}}],["modern",{"2":{"39":1}}],["mode",{"2":{"11":1}}],["more",{"2":{"9":1,"33":1}}],["monitor",{"2":{"3":1}}],["monitoring",{"0":{"3":1},"2":{"47":1}}],["mint",{"2":{"7":1,"45":1,"49":2}}],["multi",{"2":{"7":1}}],["multiple",{"2":{"0":2,"2":1,"5":1,"7":4,"31":1,"33":1,"42":1,"46":1,"50":1}}],["6963",{"2":{"31":1,"62":1}}],["640px",{"2":{"27":1}}],["600",{"2":{"14":1}}],["6",{"2":{"2":2}}],["10",{"2":{"53":1}}],["100",{"2":{"27":2,"49":1}}],["18+",{"2":{"39":1}}],["1rem",{"2":{"27":1}}],["16px",{"2":{"14":1}}],["12px",{"2":{"14":1}}],["1",{"0":{"44":1,"57":1},"2":{"2":2,"3":1,"14":1}}],["down",{"2":{"57":1}}],["download",{"2":{"12":1}}],["domain",{"2":{"57":1}}],["d",{"2":{"55":1}}],["dlx",{"2":{"37":2}}],["dynamic",{"2":{"30":1}}],["discussions",{"2":{"55":1}}],["different",{"2":{"52":1}}],["div",{"2":{"18":4,"62":2}}],["dialogs",{"2":{"6":1}}],["dashboard",{"2":{"57":1}}],["dapp",{"2":{"31":1}}],["dark",{"2":{"11":1}}],["data",{"2":{"1":2,"2":2}}],["details",{"2":{"53":1,"57":1}}],["detailed",{"2":{"40":1}}],["development",{"2":{"39":1}}],["developers",{"0":{"34":1}}],["device",{"2":{"31":1,"42":1,"44":1,"52":2}}],["devices",{"2":{"27":1}}],["dependencies",{"2":{"30":1,"38":1}}],["design",{"0":{"27":1},"2":{"11":1,"34":1}}],["definitions",{"2":{"38":1}}],["defi",{"2":{"7":1}}],["demo",{"0":{"42":1,"48":1},"2":{"2":1,"9":1,"28":1,"41":1,"42":2,"48":1,"49":1,"50":1,"54":1,"64":1}}],["rpc",{"2":{"58":4,"60":2}}],["risk",{"2":{"48":1}}],["ring",{"2":{"26":3}}],["runs",{"2":{"48":1}}],["root",{"2":{"15":1}}],["rgba",{"2":{"14":1}}],["radius",{"2":{"14":2,"15":1}}],["randomaddresstwo",{"2":{"2":2}}],["randomaddressone",{"2":{"2":2}}],["random",{"2":{"2":1}}],["refresh",{"2":{"53":1}}],["recommended",{"2":{"39":1}}],["receipt",{"2":{"3":2}}],["receipts",{"2":{"1":1,"3":2}}],["required",{"0":{"60":1},"2":{"38":1,"39":1}}],["requiring",{"2":{"0":1}}],["registration",{"2":{"52":1}}],["registry",{"2":{"37":1}}],["regular",{"2":{"31":1,"62":1}}],["responsive",{"0":{"27":1}}],["respects",{"2":{"15":1}}],["ready",{"2":{"35":1,"55":1}}],["real",{"0":{"47":1},"2":{"12":1,"42":2,"48":1}}],["react",{"2":{"2":1,"29":1,"34":1,"39":2}}],["reduce",{"2":{"5":1}}],["reduced",{"2":{"5":1}}],["reduces",{"2":{"0":1}}],["reverted",{"2":{"3":1}}],["return",{"2":{"2":1,"17":1,"18":1,"23":1,"62":1}}],["go",{"2":{"57":1}}],["github",{"2":{"55":2}}],["gives",{"2":{"30":1}}],["guide",{"2":{"35":1,"40":1,"54":3,"55":1}}],["gets",{"0":{"38":1}}],["get",{"2":{"35":1}}],["getting",{"0":{"29":1,"49":1},"1":{"30":1,"31":1,"32":1,"33":1,"34":1,"35":1},"2":{"55":1}}],["generate",{"2":{"2":1,"12":1}}],["generateprivatekey",{"2":{"2":3}}],["gradient",{"2":{"14":1}}],["gt",{"2":{"2":1,"3":1,"8":1,"17":5,"18":12,"23":2,"24":1,"26":2,"50":1,"62":6}}],["gas",{"0":{"5":1},"2":{"0":1,"5":1,"33":1,"42":1,"45":1,"48":1}}],["x27",{"2":{"2":1,"10":1,"14":1,"17":1,"18":1,"23":1,"30":1,"31":2,"34":1,"40":1,"42":2,"44":1,"50":1,"55":1}}],["http",{"2":{"58":4}}],["https",{"2":{"37":4,"57":1,"58":1}}],["holding",{"2":{"42":1}}],["hold",{"2":{"33":1}}],["how",{"0":{"31":1}}],["hooks",{"0":{"23":1},"2":{"23":1}}],["hook",{"2":{"1":1}}],["h2",{"2":{"18":2}}],["hear",{"2":{"55":1}}],["header",{"2":{"18":1}}],["hello",{"2":{"31":1,"44":1}}],["here",{"2":{"2":1,"8":1,"24":1,"50":1}}],["hash",{"2":{"45":1}}],["have",{"2":{"39":2,"55":1}}],["handle",{"2":{"8":1}}],["handlebatchtransaction",{"2":{"8":1}}],["handling",{"0":{"8":1,"24":1},"2":{"8":1,"24":1}}],["happen",{"2":{"6":1}}],["0",{"2":{"1":1,"14":5,"27":1}}],["policy",{"2":{"58":1,"61":1,"63":2}}],["popular",{"2":{"30":1}}],["public",{"2":{"58":1,"63":2}}],["publicnode",{"2":{"58":1}}],["pnpm",{"2":{"37":1}}],["pimlicoapikey",{"2":{"58":3}}],["pimlico",{"2":{"31":1,"57":1,"58":3,"63":2}}],["phrases",{"2":{"30":1,"33":1,"44":1}}],["please",{"2":{"21":1}}],["p",{"2":{"18":2}}],["packages",{"2":{"38":1}}],["paymaster",{"2":{"31":1,"58":1,"61":4}}],["paymasters",{"2":{"30":1}}],["passkeys",{"2":{"18":1,"29":1,"30":1,"33":1,"44":1,"52":1}}],["passkey",{"0":{"52":1,"57":1},"2":{"17":1,"21":1,"26":1,"31":2,"40":1,"41":1,"42":1,"57":3}}],["parseunits",{"2":{"1":1,"2":2}}],["prerequisites",{"0":{"39":1}}],["preview",{"2":{"12":1}}],["production",{"2":{"63":1}}],["process",{"2":{"58":1}}],["project",{"2":{"38":1,"39":1,"54":1}}],["provides",{"2":{"29":1}}],["properties",{"0":{"15":1},"2":{"11":1,"15":1}}],["proper",{"2":{"8":1}}],["practices",{"0":{"25":1},"1":{"26":1,"27":1}}],["private",{"2":{"33":1,"44":1}}],["privatekeytoaccount",{"2":{"2":3}}],["privy",{"2":{"30":1}}],["primary",{"2":{"15":2,"20":2}}],["pending",{"2":{"1":1,"3":3,"53":1}}],["cli",{"0":{"37":1},"2":{"37":1}}],["classname=",{"2":{"17":1,"18":2,"26":1}}],["classes",{"2":{"14":1,"17":1,"38":1}}],["creating",{"2":{"62":1}}],["creation",{"2":{"31":1}}],["created",{"2":{"31":1}}],["create",{"2":{"17":1,"23":1,"49":1,"57":1,"58":1}}],["c",{"2":{"17":2,"23":2,"50":2}}],["chain",{"2":{"60":1}}],["chains",{"2":{"58":1}}],["change",{"2":{"15":1}}],["changes",{"2":{"12":1}}],["choose",{"0":{"32":1},"1":{"33":1,"34":1}}],["check",{"2":{"3":3,"28":1,"53":1}}],["custombatuamodal",{"2":{"18":1}}],["customconnectbutton",{"2":{"17":1}}],["custom",{"0":{"15":1,"17":1,"18":1,"21":1,"23":1,"24":1},"2":{"11":1,"12":1,"14":2,"15":1,"17":2,"18":2,"23":1,"24":1,"48":1}}],["customize",{"2":{"12":1,"18":1,"21":1,"54":1,"64":1}}],["customizer",{"0":{"12":1},"2":{"12":2}}],["customized",{"2":{"10":1,"12":1}}],["customizations",{"2":{"26":1,"27":1,"28":1}}],["customization",{"0":{"10":1,"13":1,"16":1,"22":1},"1":{"11":1,"12":1,"13":1,"14":2,"15":2,"16":1,"17":2,"18":2,"19":1,"20":1,"21":1,"22":1,"23":2,"24":2,"25":1,"26":1,"27":1,"28":1},"2":{"12":1,"54":1}}],["customizing",{"2":{"9":1}}],["css",{"0":{"15":1},"2":{"11":1,"12":1,"14":1,"15":1,"38":1,"39":1}}],["calc",{"2":{"27":1}}],["call",{"2":{"7":1}}],["callpending",{"2":{"1":1}}],["calls",{"2":{"2":1,"8":1,"50":1}}],["callsucceeded",{"2":{"1":2}}],["callstatus",{"2":{"1":2}}],["callreceipts",{"2":{"1":4,"3":4}}],["catch",{"2":{"8":1}}],["cases",{"0":{"7":1}}],["can",{"0":{"43":1},"1":{"44":1,"45":1,"46":1,"47":1},"2":{"3":1,"5":1,"10":1,"14":1,"17":1,"58":1,"62":1}}],["codebase",{"2":{"34":1}}],["code",{"0":{"50":1},"2":{"30":1,"34":1,"50":1}}],["color",{"2":{"14":2,"15":5,"20":2}}],["colors",{"2":{"11":2,"12":1,"20":1}}],["com",{"2":{"58":1}}],["command",{"2":{"37":1}}],["common",{"2":{"7":1}}],["compatible",{"2":{"31":1,"62":1}}],["compatibility",{"2":{"31":1}}],["component",{"0":{"16":1},"1":{"17":1,"18":1},"2":{"38":2}}],["components",{"0":{"14":1},"2":{"10":1,"11":1,"12":1,"18":2}}],["complete",{"2":{"2":1,"30":1,"34":1}}],["configuration",{"0":{"59":1,"60":1,"61":1},"1":{"60":1,"61":1},"2":{"57":2}}],["configure",{"2":{"40":1,"54":1,"57":2}}],["configured",{"2":{"39":1}}],["confirmation",{"2":{"6":1,"53":1}}],["context",{"2":{"58":1,"61":2}}],["content",{"0":{"18":1},"2":{"18":1}}],["continue",{"2":{"35":1,"40":1}}],["control",{"2":{"34":1}}],["controlled",{"2":{"31":1}}],["contract",{"2":{"7":2}}],["connectwallet",{"2":{"62":1}}],["connectwitherrorhandling",{"2":{"24":1}}],["connectbatua",{"2":{"23":2,"26":1}}],["connecting",{"2":{"21":2}}],["connection",{"0":{"44":1},"2":{"18":1,"21":1,"31":1,"34":1}}],["connector",{"2":{"17":1,"23":1,"62":4}}],["connectors",{"2":{"17":2,"23":2,"50":2,"62":3}}],["connect",{"0":{"17":1},"2":{"14":1,"17":4,"18":1,"23":2,"24":2,"26":2,"42":1,"44":1,"50":2,"62":2}}],["connected",{"2":{"8":1,"21":2}}],["consistency",{"2":{"34":1}}],["console",{"2":{"3":4,"8":1,"53":1}}],["const",{"2":{"1":6,"2":3,"8":1,"17":2,"20":1,"21":1,"23":4,"24":1,"50":3,"58":1,"62":1}}],["cost",{"2":{"5":1}}],["costs",{"2":{"0":1,"5":1}}],["===",{"2":{"1":2,"3":3,"17":1,"23":1,"50":1}}],["=",{"2":{"1":6,"2":4,"3":1,"8":2,"17":4,"20":1,"21":1,"23":6,"24":2,"50":4,"58":1,"62":3}}],["each",{"2":{"60":1}}],["easy",{"2":{"12":1,"29":1,"34":1}}],["easily",{"2":{"10":1}}],["every",{"2":{"47":1,"53":1}}],["eip",{"2":{"31":1,"62":1}}],["ethereum",{"2":{"58":1}}],["ethers",{"2":{"30":1,"62":1}}],["eth",{"2":{"33":1,"42":1}}],["etc",{"2":{"31":1,"44":1}}],["embedded",{"2":{"29":1,"30":1}}],["endpoints",{"2":{"60":2,"61":1}}],["env",{"2":{"58":1}}],["environment",{"0":{"48":1,"63":1},"2":{"48":1,"63":1}}],["enabled",{"2":{"52":1}}],["enable",{"2":{"49":1}}],["enables",{"2":{"30":1}}],["entire",{"2":{"34":1}}],["ensure",{"2":{"26":1,"52":1}}],["encodefunctiondata",{"2":{"1":1,"2":2}}],["error",{"0":{"8":1,"24":1},"2":{"8":6,"21":1,"24":6,"53":1}}],["erc20",{"2":{"2":2,"49":1}}],["erc20abi",{"2":{"1":1,"2":2}}],["erc",{"0":{"2":1},"2":{"2":1,"45":1,"48":1}}],["efficiency",{"0":{"5":1},"2":{"31":1,"46":1}}],["execute",{"2":{"42":1}}],["execution",{"2":{"5":1,"6":1}}],["external",{"2":{"30":1}}],["existing",{"2":{"11":1,"31":1,"34":1}}],["export",{"2":{"23":1}}],["explore",{"2":{"9":1}}],["experimental",{"2":{"1":2}}],["experience",{"2":{"0":1,"39":1,"41":1,"45":1,"46":1}}],["examples",{"2":{"9":1,"28":1}}],["example",{"0":{"2":1},"2":{"2":1}}],["quot",{"2":{"1":10,"2":12,"3":12,"8":4,"17":6,"18":6,"20":8,"21":6,"23":4,"24":4,"26":4,"49":2,"50":2,"58":10,"62":4}}],["funds",{"2":{"48":1}}],["function",{"2":{"17":1,"18":1,"23":1,"24":1,"62":1}}],["functionality",{"2":{"17":1,"23":1,"29":1,"38":1}}],["functions",{"2":{"7":1}}],["functionname",{"2":{"2":2}}],["framework",{"2":{"34":1}}],["from",{"2":{"1":4,"2":2,"17":1,"18":1,"23":1,"24":2,"55":1,"58":3,"62":1}}],["flexible",{"2":{"34":1}}],["flow",{"2":{"6":1}}],["find",{"2":{"17":1,"23":1,"50":1}}],["found",{"2":{"55":1}}],["following",{"2":{"38":1,"54":1}}],["followed",{"2":{"37":1}}],["follows",{"2":{"11":1}}],["focus",{"2":{"26":3}}],["footer",{"2":{"18":1}}],["font",{"2":{"11":1,"14":1}}],["foreground",{"2":{"15":1}}],["foreach",{"2":{"3":1}}],["for",{"0":{"33":1,"34":1},"2":{"0":1,"1":1,"2":1,"11":1,"12":1,"29":1,"30":2,"31":1,"33":1,"38":1,"39":3,"40":1,"42":1,"48":1,"53":3,"57":1,"60":2,"61":2,"63":1}}],["features",{"2":{"41":1,"42":1}}],["fewer",{"2":{"6":1}}],["fees",{"2":{"45":1,"48":1}}],["feedback",{"0":{"55":1},"2":{"24":1,"47":1}}],["fee",{"2":{"5":1}}],["face",{"2":{"31":1,"44":1}}],["facing",{"2":{"21":1}}],["faster",{"2":{"6":1,"33":1}}],["fail",{"2":{"5":1}}],["failed",{"2":{"3":2,"8":1,"21":1,"24":1,"52":2,"53":1}}],["same",{"2":{"50":1}}],["safe",{"2":{"48":1}}],["showcases",{"2":{"42":1}}],["should",{"2":{"39":1}}],["sh",{"2":{"37":4}}],["shadow",{"2":{"14":1}}],["shadcn",{"2":{"10":1,"11":1,"30":1,"37":5,"39":2}}],["sponsorship",{"2":{"58":1,"61":1,"63":2}}],["sponsorshippolicyid",{"2":{"58":1}}],["sponsored",{"2":{"33":1,"45":1,"48":2}}],["sponsor",{"2":{"31":1}}],["sponsoring",{"2":{"29":1,"30":1,"31":1,"41":1,"42":1,"61":1}}],["spacing",{"2":{"11":1}}],["solution",{"2":{"29":1}}],["svg",{"2":{"20":1}}],["switching",{"2":{"11":1}}],["swap",{"2":{"7":1}}],["system",{"2":{"11":1}}],["sepolia",{"2":{"48":1,"53":1,"58":7}}],["see",{"2":{"42":1,"45":1}}],["seed",{"2":{"30":1,"33":1,"44":1}}],["server",{"0":{"57":1},"2":{"40":1,"57":3}}],["service",{"2":{"31":1}}],["set",{"0":{"57":1},"2":{"40":1,"63":1}}],["setup",{"2":{"39":1,"40":1,"54":1}}],["settings",{"2":{"11":1,"57":1}}],["seamlessly",{"2":{"30":1}}],["seamless",{"2":{"29":1}}],["seconds",{"2":{"47":1,"53":2}}],["secondary",{"2":{"14":1,"15":2,"20":2}}],["security",{"2":{"44":1}}],["secure",{"2":{"30":1,"33":2,"44":1}}],["secured",{"2":{"18":1,"29":1}}],["send",{"2":{"7":1,"31":1,"42":1,"46":1,"50":1}}],["sendbatchtransactioncallback",{"2":{"2":1}}],["sendcalls",{"2":{"1":1,"2":2,"8":2,"50":2}}],["step",{"0":{"57":1,"58":1},"2":{"57":1}}],["steps",{"0":{"9":1,"28":1,"35":1,"40":1,"54":1,"64":1}}],["start",{"2":{"55":1}}],["started",{"0":{"29":1},"1":{"30":1,"31":1,"32":1,"33":1,"34":1,"35":1},"2":{"35":1,"55":1}}],["status",{"0":{"3":1},"2":{"1":2,"3":4,"45":1,"47":1}}],["still",{"2":{"17":1}}],["styles",{"2":{"14":1}}],["styling",{"0":{"14":1},"2":{"12":1,"14":2,"38":1,"39":1}}],["scenarios",{"2":{"7":1}}],["s",{"2":{"2":1,"10":1,"14":1,"17":1,"18":1,"23":1,"30":1,"31":2,"34":1,"42":2,"44":1}}],["submission",{"2":{"60":1}}],["suggestions",{"2":{"55":1}}],["supported",{"2":{"52":1}}],["support",{"2":{"29":1,"38":1,"60":1}}],["supports",{"2":{"1":1,"11":1,"30":1,"52":1}}],["sure",{"2":{"27":1,"39":1,"52":1,"63":1}}],["succeed",{"2":{"5":1}}],["succeeded",{"2":{"3":2}}],["successfully",{"2":{"21":1}}],["success",{"2":{"1":1,"3":1}}],["since",{"2":{"11":1}}],["single",{"0":{"45":1},"2":{"0":1,"6":1,"31":1,"42":1}}],["simplified",{"2":{"6":1}}],["significantly",{"2":{"5":1}}],["signature",{"2":{"0":1,"6":1}}],["smart",{"2":{"0":1,"29":2,"30":1,"31":2,"38":1,"49":1}}],["io",{"2":{"57":1,"58":2}}],["item",{"2":{"37":1}}],["its",{"2":{"14":1}}],["it",{"0":{"31":1},"2":{"10":1,"11":1,"29":1,"58":1}}],["injected",{"2":{"62":1}}],["includes",{"2":{"49":1}}],["including",{"2":{"41":1}}],["instructions",{"2":{"40":1,"54":1}}],["installing",{"2":{"39":1,"58":1}}],["installed",{"0":{"38":1}}],["installbunx",{"2":{"37":1}}],["installyarn",{"2":{"37":1}}],["installnpx",{"2":{"37":1}}],["install",{"0":{"37":1},"2":{"37":2,"54":1}}],["installation",{"0":{"36":1},"1":{"37":1,"38":1,"39":1,"40":1},"2":{"35":1,"38":1,"40":1,"54":1}}],["instead",{"2":{"5":1}}],["inherits",{"2":{"10":1,"11":1}}],["integrates",{"2":{"30":1}}],["integrate",{"2":{"29":1,"35":1,"55":1,"58":1}}],["integration",{"0":{"11":1,"20":1,"62":1},"2":{"29":1,"34":1,"40":1}}],["interface",{"2":{"20":1}}],["interactive",{"0":{"42":1},"2":{"9":1,"28":1,"41":1,"42":1,"64":1}}],["interactions",{"2":{"7":1}}],["into",{"2":{"0":1,"29":1,"55":1,"58":1}}],["in",{"2":{"6":1,"7":1,"9":1,"12":1,"28":1,"31":3,"40":1,"41":1,"42":2,"44":1,"46":1,"50":1,"54":1,"64":1}}],["index",{"2":{"3":2}}],["individual",{"2":{"3":1}}],["if",{"2":{"1":1,"2":1,"3":6,"8":1,"23":1,"24":1}}],["id=your",{"2":{"63":1}}],["id",{"2":{"1":2,"31":2,"44":2,"58":6,"61":1,"63":1}}],["implementing",{"2":{"57":1}}],["implement",{"0":{"58":1},"2":{"8":1,"24":1,"54":1}}],["import",{"2":{"1":3,"2":2,"17":1,"18":1,"23":1,"24":2,"58":3,"62":1}}],["improves",{"2":{"0":1}}],["issue",{"2":{"55":1}}],["issues",{"0":{"52":1,"53":1},"2":{"55":1}}],["isavailable",{"2":{"23":1}}],["isconnecting",{"2":{"23":1}}],["isconnected",{"2":{"23":2}}],["ispending",{"2":{"23":2}}],["is",{"0":{"30":1},"2":{"0":1,"3":2,"10":1,"29":1,"30":1,"31":1,"39":1,"50":1}}],["available",{"2":{"62":1}}],["apikey=$",{"2":{"58":2}}],["api",{"2":{"58":3,"63":2}}],["appear",{"2":{"62":1}}],["appears",{"2":{"31":1}}],["appearance",{"2":{"15":1,"54":1}}],["app",{"2":{"20":1,"30":1,"34":1,"40":1}}],["application",{"2":{"10":1,"29":1,"50":1,"55":1,"58":1}}],["appropriately",{"2":{"8":1}}],["approve",{"2":{"6":1,"7":1,"46":1}}],["at",{"2":{"48":1}}],["atomically",{"2":{"7":1,"46":1}}],["atomic",{"2":{"5":1}}],["after",{"2":{"40":1,"54":1,"58":1,"62":1}}],["as",{"2":{"31":1,"62":1}}],["async",{"2":{"2":1,"8":1}}],["any",{"2":{"34":1}}],["an",{"2":{"29":1,"30":1,"55":1,"62":1}}],["and",{"2":{"0":1,"7":1,"10":1,"12":1,"24":1,"29":1,"30":1,"31":1,"41":1,"45":1,"46":1,"57":1,"62":1}}],["authenticate",{"2":{"31":1,"33":1}}],["authentication",{"2":{"26":1,"30":1,"31":2,"41":1,"42":2,"44":1,"52":1}}],["auto",{"2":{"27":1}}],["automatically",{"2":{"10":1,"11":2}}],["again",{"2":{"21":1}}],["amp",{"2":{"17":2}}],["advanced",{"0":{"22":1},"1":{"23":1,"24":1}}],["additional",{"2":{"61":1}}],["add",{"2":{"20":1,"37":5,"38":1,"49":1}}],["addresses",{"2":{"2":1}}],["address",{"2":{"2":6,"8":2}}],["adjust",{"2":{"12":1}}],["about",{"2":{"9":1,"28":1,"64":1}}],["abi",{"2":{"2":2}}],["ability",{"2":{"0":1}}],["await",{"2":{"8":1}}],["aria",{"2":{"26":1}}],["are",{"2":{"7":1,"33":1,"48":1,"52":1}}],["args",{"2":{"2":2}}],["allows",{"2":{"12":1}}],["all",{"2":{"5":1,"6":1,"31":1,"38":1,"41":1,"42":1,"47":1,"48":1}}],["action",{"2":{"41":1}}],["actions",{"2":{"0":1}}],["across",{"2":{"27":1}}],["accessibility",{"0":{"26":1},"2":{"26":1}}],["access",{"2":{"3":1}}],["account",{"2":{"1":1,"2":2,"8":2,"29":2,"30":1,"31":2,"38":1,"49":1}}],["accounts",{"2":{"0":1,"2":1}}],["a",{"2":{"0":1,"2":1,"17":1,"29":1,"31":3,"42":1,"48":1,"49":2,"52":1,"57":1}}],["browser",{"2":{"52":1}}],["branding",{"0":{"19":1},"1":{"20":1,"21":1},"2":{"20":1}}],["brand",{"2":{"10":1,"14":1,"54":1,"64":1}}],["biometrics",{"2":{"33":1,"52":1}}],["biometric",{"2":{"31":1,"42":1}}],["blue",{"2":{"26":1}}],["block",{"2":{"6":1}}],["box",{"2":{"14":1,"38":1}}],["border",{"2":{"14":2,"15":2}}],["balance",{"2":{"42":2,"47":1,"49":1,"53":2}}],["based",{"2":{"29":1}}],["background",{"2":{"14":1,"15":2}}],["batuaconfig",{"2":{"20":1,"21":1}}],["batuaconnector",{"2":{"17":3,"23":4,"50":1}}],["batuamodal",{"2":{"18":4}}],["batua",{"0":{"30":1,"32":1,"41":1,"58":1},"1":{"33":1,"34":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1},"2":{"1":1,"9":1,"10":1,"11":1,"12":1,"14":3,"15":7,"17":2,"18":2,"20":1,"23":2,"27":2,"29":1,"30":1,"31":1,"35":1,"37":5,"38":1,"39":2,"40":1,"41":1,"42":1,"50":2,"54":1,"55":1,"57":1,"58":4,"62":4,"64":2}}],["batched",{"2":{"46":1}}],["batching",{"2":{"2":1,"5":1}}],["batch",{"0":{"0":1,"2":1,"3":1,"4":1,"46":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":1,"9":1},"2":{"0":1,"1":1,"3":7,"7":1,"8":3,"9":1,"28":1,"29":1,"30":1,"31":2,"33":1,"41":1,"42":1,"49":1,"50":1,"54":2,"64":1}}],["bundler",{"2":{"58":1,"60":2}}],["bun",{"2":{"37":1}}],["button",{"0":{"17":1},"2":{"14":2,"17":4,"26":2,"49":1,"62":2}}],["built",{"2":{"10":1,"31":1,"39":1,"44":1,"50":1}}],["behave",{"2":{"62":1}}],["before",{"2":{"39":1,"57":1}}],["best",{"0":{"25":1},"1":{"26":1,"27":1},"2":{"39":1}}],["be",{"2":{"10":1}}],["beneficial",{"2":{"7":1}}],["benefits",{"0":{"4":1},"1":{"5":1,"6":1,"7":1},"2":{"0":1}}],["better",{"0":{"6":1},"2":{"30":1,"31":1}}],["by",{"2":{"0":1,"14":1,"18":2,"29":1,"31":1,"37":1}}],["key=your",{"2":{"63":1}}],["key=",{"2":{"62":1}}],["keys",{"2":{"33":1,"44":1}}],["key",{"2":{"0":1,"42":1,"58":1,"63":1}}],["tailwind",{"2":{"38":1,"39":1}}],["targeting",{"2":{"14":1}}],["typescript",{"2":{"38":1,"39":1}}],["type",{"2":{"38":1}}],["typography",{"2":{"11":1}}],["text",{"2":{"15":1}}],["testing",{"2":{"48":1}}],["testnet",{"2":{"48":1}}],["test",{"0":{"43":1,"49":1},"1":{"44":1,"45":1,"46":1,"47":1},"2":{"2":2,"40":1,"41":1,"42":1,"45":1,"48":1,"49":3}}],["time",{"0":{"47":1},"2":{"12":1,"42":2}}],["troubleshooting",{"0":{"51":1},"1":{"52":1,"53":1}}],["traditional",{"2":{"33":1}}],["transports",{"2":{"58":3,"60":2,"61":1}}],["transport",{"2":{"58":1}}],["transfers",{"2":{"7":1,"46":1,"48":1,"49":1}}],["transfer",{"2":{"2":2,"7":1,"46":1}}],["transaction",{"0":{"53":1},"2":{"3":4,"5":1,"7":1,"8":1,"29":1,"30":1,"31":1,"41":1,"42":2,"45":1,"46":1,"47":1,"49":1,"53":2,"61":1}}],["transactionhash",{"2":{"1":2,"3":1}}],["transactions",{"0":{"0":1,"4":1,"45":1,"46":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":1,"9":1},"2":{"0":1,"1":1,"3":1,"7":1,"8":1,"9":1,"28":1,"29":1,"30":1,"31":2,"33":2,"41":1,"42":2,"45":1,"48":2,"50":1,"54":2,"64":1}}],["trying",{"2":{"54":1}}],["try",{"0":{"41":1},"1":{"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1},"2":{"8":1,"9":1,"21":1,"28":1,"52":1,"64":1}}],["than",{"2":{"33":1}}],["that",{"2":{"23":1,"30":1,"38":1,"49":1}}],["through",{"2":{"30":1,"31":1}}],["throw",{"2":{"8":1}}],["this",{"2":{"0":1}}],["them",{"2":{"49":1}}],["theme",{"0":{"11":1},"2":{"10":1,"11":2,"29":1,"30":1,"34":1,"38":1}}],["their",{"2":{"31":1}}],["these",{"2":{"15":1}}],["the",{"0":{"37":1,"50":1},"2":{"0":2,"1":1,"3":1,"12":1,"15":1,"18":1,"20":1,"28":1,"31":1,"34":1,"35":1,"37":4,"38":4,"39":1,"40":2,"41":1,"46":1,"48":1,"49":1,"50":2,"53":2,"54":4,"57":1,"62":2}}],["touch",{"2":{"31":1,"44":1}}],["toast",{"2":{"24":3}}],["tool",{"2":{"12":1}}],["together",{"2":{"5":1,"7":1}}],["total",{"2":{"5":1}}],["tokens",{"0":{"49":1},"2":{"7":3,"45":1,"46":1,"49":2}}],["token",{"2":{"2":2,"7":1,"42":1,"46":1,"48":2}}],["to",{"2":{"0":1,"2":2,"6":1,"10":1,"12":1,"15":1,"18":1,"20":1,"21":1,"29":1,"33":1,"35":3,"37":1,"38":1,"40":2,"49":3,"50":1,"54":1,"55":2,"57":2,"60":1,"63":1,"64":1}}],["own",{"2":{"34":1}}],["ownership",{"2":{"30":1}}],["out",{"2":{"28":1,"38":1}}],["our",{"2":{"9":1,"12":1,"28":1,"41":1,"42":1,"54":2,"55":1,"64":1}}],["optional",{"0":{"61":1},"2":{"58":2}}],["optionally",{"2":{"31":1}}],["options",{"0":{"19":1,"59":1},"1":{"20":1,"21":1,"60":1,"61":1}}],["operations",{"0":{"2":1},"2":{"2":1,"5":2,"6":1,"7":2,"8":1,"31":1,"33":1,"42":1,"46":1,"47":1,"50":1}}],["operation",{"2":{"0":1}}],["override",{"2":{"14":1}}],["overhead",{"2":{"5":1}}],["or",{"2":{"5":1,"7":1,"44":1,"52":1,"55":1}}],["on",{"2":{"47":1,"48":1,"53":1}}],["onclick=",{"2":{"17":1,"26":1,"62":1}}],["once",{"2":{"6":1}}],["online",{"2":{"12":1}}],["only",{"2":{"0":1,"5":1,"6":1}}],["one",{"2":{"0":2,"5":1,"6":1,"7":1,"46":1,"62":1}}],["offset",{"2":{"26":1}}],["of",{"0":{"4":1},"1":{"5":1,"6":1,"7":1},"2":{"0":2,"2":1,"3":1,"5":1,"37":1,"38":1,"42":1,"46":1,"62":1}}]],"serializationVersion":2}
